webpackJsonp([3],{23:function(s,n,a){var i,c;__vdoc_config_=a(25),c=a(35),s.exports=i||{},s.exports.__esModule&&(s.exports=s.exports["default"]),c&&(("function"==typeof s.exports?s.exports.options:s.exports).html=c)},25:function(s,n){},35:function(s,n){s.exports="<p>为Vdoc开发主题是一件非常容易的事情，在Vdoc主题中的每个元素都是合法的vue组件，因此你可以用任何你熟悉的vue开发方式为Vdoc开发主题。vdco为vue组件提供了一个混合<code>mixins</code>，通过混合你可以拿到文档的所有数据。</p> <figure class=\"highlight js\"><table><tr><td class=code><pre><div class=line><span class=keyword>import</span> vdoc <span class=keyword>from</span> <span class=string>'../src/main'</span></div><div class=line>Vue.component(<span class=string>'com'</span>, {</div><div class=line>    mixins: [vdoc.mixin],</div><div class=line>    template: <span class=string>\"&lt;div&gt;{{{doc.html}}}&lt;/div&gt;\"</span>,</div><div class=line>    ready: <span class=function><span class=keyword>function</span> (<span class=params></span>) </span>{</div><div class=line>        <span class=built_in>console</span>.log(<span class=keyword>this</span>.vdoc) <span class=comment>// Vdoc 实例</span></div><div class=line>        <span class=built_in>console</span>.log(<span class=keyword>this</span>.doc) <span class=comment>// doc 对象，属性包括html和script模块的属性</span></div><div class=line>        <span class=built_in>console</span>.log(<span class=keyword>this</span>.subtitiles) <span class=comment>// 子标题数组，若subtitle为false则为空数组</span></div><div class=line>    }</div><div class=line>})</div></pre></td></tr></table></figure><p>以上即为一个可用的Vdoc主题组件。</p>"}});