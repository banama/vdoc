webpackJsonp([2],{24:function(s,a,i){var e,l;__vdoc_config_=i(26),l=i(36),s.exports=e||{},s.exports.__esModule&&(s.exports=s.exports["default"]),l&&(("function"==typeof s.exports?s.exports.options:s.exports).html=l)},26:function(s,a){},36:function(s,a){s.exports='<p>示例项目</p> <p><a href=https://github.com/banama/cn-vue-vdoc>Vdoc实现的Vue中文文档</a></p> <p><a href=https://github.com/banama/vdoc/tree/vdoc-doc>Vdoc文档</a></p> <h2 id=->配置打包流程</h2> <figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=keyword>var</span> VdocPlugin = <span class=built_in>require</span>(<span class=string>\'Vdoc-webpack-plugin\'</span>)</div><div class=line><span class=keyword>var</span> cbk = <span class=function><span class=keyword>function</span> (<span class=params></span>) </span>{</div><div class=line>    <span class=comment>// Vdoc 的构建配置基于一个webpack的库，</span></div><div class=line>    <span class=comment>// 详细 api 请见 https://github.com/banama/webpack-boost</span></div><div class=line>    <span class=keyword>this</span>.setEntry({</div><div class=line>        main: [<span class=string>\'./src/main.js\'</span>]    <span class=comment>// 配置 webpack 入口文件</span></div><div class=line>    })</div><div class=line>    <span class=keyword>this</span>.setHtml({</div><div class=line>        template: <span class=string>"./template/index.html"</span>,</div><div class=line>        filename: <span class=string>"index.html"</span>,    <span class=comment>// html 入口文件</span></div><div class=line>        chunk: [<span class=string>\'main\'</span>]</div><div class=line>    })</div><div class=line>    <span class=keyword>this</span>.loaders({</div><div class=line>        test: <span class=regexp>/\\.styl$/</span>,           <span class=comment>// 配置loader</span></div><div class=line>        loader: <span class=string>\'stylus\'</span></div><div class=line>    })</div><div class=line>    <span class=keyword>this</span>.loaders({</div><div class=line>        test: <span class=regexp>/\\.png$/</span>,</div><div class=line>        loader: <span class=string>\'url-loader\'</span></div><div class=line>    })</div><div class=line>    <span class=keyword>this</span>.plugins(</div><div class=line>        <span class=keyword>new</span> VdocPlugin({</div><div class=line>            doc: <span class=string>"./doc"</span>,          <span class=comment>// 制定文档目录</span></div><div class=line>            outFile: <span class=string>"./Vdoc.Vdoc"</span> <span class=comment>// 生成配置文件</span></div><div class=line>        })</div><div class=line>    )</div><div class=line>}</div></pre></td></tr></table></figure><h3 id=-webpack-dev-server->开启 webpack-dev-server 模式</h3> <figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=keyword>var</span> build = <span class=built_in>require</span>(<span class=string>\'Vdoc/build.js\'</span>)</div><div class=line>build.live({</div><div class=line>}, cbk)</div></pre></td></tr></table></figure><h3 id=->开发构建模式</h3> <figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=keyword>var</span> build = <span class=built_in>require</span>(<span class=string>\'Vdoc/build.js\'</span>)</div><div class=line>build.dev(cbk)</div></pre></td></tr></table></figure><h3 id=->生产环境模式</h3> <figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=keyword>var</span> build = <span class=built_in>require</span>(<span class=string>\'Vdoc/build.js\'</span>)</div><div class=line>build.pro(cbk)</div></pre></td></tr></table></figure><h2 id=->使用</h2> <p>在构建一个文档之前往往需要简单的配置，Vdoc 仅支持node api方式的配置，下面是一个示例。</p> <figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=keyword>import</span> Vdoc <span class=keyword>from</span> <span class=string>\'../dist/index.js\'</span></div><div class=line><span class=keyword>var</span> Vdoc = <span class=keyword>new</span> Vdoc({</div><div class=line>    Vue: Vue</div><div class=line>})</div><div class=line>Vdoc.mout(<span class=built_in>require</span>(<span class=string>"../Vdoc.Vdoc"</span>))</div><div class=line>Vdoc.theme(<span class=built_in>require</span>(<span class=string>\'../theme\'</span>))</div><div class=line>Vdoc.start(<span class=string>"#app"</span>, {history: <span class=literal>false</span>})</div><div class=line><span class=built_in>module</span>.exports = Vdoc</div></pre></td></tr></table></figure><p>Vdoc 的配置是一个js文件，它是webpack的入口(entry)文件。</p> <h3 id=vdoc->Vdoc实例</h3> <p>每个 Vdoc 应用的起步都是通过构造函数 Vdoc 创建一个 Vdoc 的根实例</p> <figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=keyword>var</span> Vdoc = <span class=keyword>new</span> Vdoc({</div><div class=line>    <span class=comment>// 配置</span></div><div class=line>})</div><div class=line><span class=comment>// 目前每一个Vdoc的实例只需要将Vue的对象挂载到Vue即可。</span></div></pre></td></tr></table></figure><h3 id=->挂载文档数据</h3> <p>在打包的配置中用到了 Vdoc-webpack-plugin, 其中配置项 outfile 即为webpack生成的 Vdoc 需要的文档配置信息。再实例化Vdoc之后需要将该文件数据挂载到 Vdoc. 需注意webpack require该文件需要用到 Vdoc-loader，请将outfile文件扩展名定为 Vdoc ,或者手动配置webpack的loader</p> <h3 id=->配置主题</h3> <p>Vdoc 提供了一个api <code>theme</code> 可安装主题，内部其实是将 Vue 的组件挂在 <code>Vue.options.components</code>，方便Vdoc使用。<code>Vdoc.theme</code> 也可安装npm上的 Vdoc-them 模块。更多有关主题内容详见 <code>Vdoc theme api</code> 和 <a href=https://github.com/banama/cn-vue-Vdoc/tree/master>示例主题</a>。</p> <h3 id=->开始</h3> <p>Vdoc 依赖于 vue-router 构建单页文旦。Vdoc.start 接收一个初始化vue的el 和 规范的vue-router配置作为参数。</p> <h2 id=->写文档</h2> <p>熟悉vuejs开发的同学一定了解 vue-loader, 为了更方面写文档。专门为Vdoc 开发了一个 vue-loader 的 fork 版本 doc-loader。在doc-loader中支持template, script 和 config 标签。其中template标签书写文档，config标签书写配置，一般来说只配置这两个标签就够了。script标签和vue-loader的script标签相同, config的配置信息在Vdoc应用启动一个app后就可以拿到。而<code>script</code>的信息在异步加载文档之后才能拿到。</p> <p>Vdoc 现在支持的配置</p> <figure class="highlight plain"><table><tr><td class=code><pre><div class=line>&lt;config&gt;</div><div class=line>title       文档的标题</div><div class=line>type        文档的类型</div><div class=line>subtitle    文档是否展示子标题</div><div class=line>order       文档顺序</div><div class=line>template    文档的模板</div><div class=line>route       文档的定制路由</div><div class=line>&lt;/config&gt;</div></pre></td></tr></table></figure><p>和vue-loader相同，doc-loader也可以配置每个标签内容的webpack-loader。例如</p> <figure class="highlight js"><table><tr><td class=code><pre><div class=line>&lt;config lang=<span class=string>"yaml"</span>&gt;</div><div class=line><span class=xml><span class=tag>&lt;/<span class=name>config</span>&gt;</span></span></div></pre></td></tr></table></figure>'}});